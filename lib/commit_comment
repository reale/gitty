#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-9 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


source bashlets core::github::api

# Create a commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#create-a-commit-comment
# @public
function bashlets::core::github::commit_comment::create()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local ref="${3:?Ref needed}"
    local text="${4:?Comment text required}"
    local path="$5"     # Relative path of the file to comment on
    local position="$6" # Line index in the diff to comment on
    local url="/repos/$owner/$repo/commits/$ref/comments"
    local data

    data="{\"body\": \"$text\"}"

    if [[ -n $path ]]
    then
        data="$(echo "$data" | jq -r --arg path "$path" '. + {path: $path}')"
    fi

    if [[ -n $position ]]
    then
        data="$(echo "$data" | jq -r --arg position "$position" '. + {position: $position}')"
    fi

    $BASHLETS_NAMESPACE api post "$url" "$data" .id
}

# Delete a commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#delete-a-commit-comment
# @public
function bashlets::core::github::commit_comment::delete()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local id="${3:?Comment id required}"
    local url="/repos/$owner/$repo/comments/$id"

    $BASHLETS_NAMESPACE api delete "$url"
}

# Update a commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#update-a-commit-comment
# @public
function bashlets::core::github::commit_comment::edit()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local id="${3:?Comment id required}"
    local text="${4:?Comment text required}"
    local url="/repos/$owner/$repo/comments/$id"

    $BASHLETS_NAMESPACE api patch "$url" "{\"body\": \"$text\"}" .updated_at
}

# Get a single commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment
# @public
function bashlets::core::github::commit_comment::get()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local id="${3:?Comment id required}"
    local url="/repos/$owner/$repo/comments/$id"

    $BASHLETS_NAMESPACE api get "$url" .
}

# Get the path of a single commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment
# @public
function bashlets::core::github::commit_comment::path()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local id="${3:?Comment id required}"
    local url="/repos/$owner/$repo/comments/$id"

    $BASHLETS_NAMESPACE api get "$url" .path
}

# Get the position of a single commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment
# @public
function bashlets::core::github::commit_comment::position()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local id="${3:?Comment id required}"
    local url="/repos/$owner/$repo/comments/$id"

    $BASHLETS_NAMESPACE api get "$url" .position
}

# Get the commit ID of a single commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment
# @public
function bashlets::core::github::commit_comment::ref()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local id="${3:?Comment id required}"
    local url="/repos/$owner/$repo/comments/$id"

    $BASHLETS_NAMESPACE api get "$url" .commit_id
}

# Get the text of a single commit comment.
#
# @cf   https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment
# @public
function bashlets::core::github::commit_comment::text()
{
    local owner="${1:?User name required}"
    local repo="${2:?Repository name required}"
    local id="${3:?Comment id required}"
    local url="/repos/$owner/$repo/comments/$id"

    $BASHLETS_NAMESPACE api get "$url" .body
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
