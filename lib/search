#!/bin/bash


################################################################################
#  ____ ____ ____ ____ ____ 
# ||G |||i |||t |||t |||y ||
# ||__|||__|||__|||__|||__||
# |/__\|/__\|/__\|/__\|/__\|
#                                        
# Gitty -- A GitHub client in Bash
#
# Copyright (c) 2014-20 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################



# Find file contents via various criteria.
#
# @cf   https://developer.github.com/v3/search/#search-code
# @public
function gitty::search::code()
{
    local q="${1:-gitty}" selector="${2:-url}"
    limit="${3:-100}" callback="${4:-cat}"
    local url="/search/code?q=$q"
    
    gitty::api::paginate "$url" "$selector" "$limit" "$callback"
}

# Find commits via various criteria.
#
# @cf   https://developer.github.com/v3/search/#search-commits
# @public
function gitty::search::commits()
{
    local q="${1:-gitty}" selector="${2:-url}"
    limit="${3:-100}" callback="${4:-cat}"
    local url="/search/commits?q=$q"
    
    (
        # Note: To access the API we must provide a custom media type in the
        # Accept header.

        GITTY_API_CUSTOM_HEADERS="$GITTY_API_CUSTOM_HEADERS -H 'Accept: application/vnd.github.cloak-preview'"
        gitty::api::paginate "$url" "$selector" "$limit" "$callback"
    )
}

# Find issues by state and keyword.
#
# @cf   https://developer.github.com/v3/search/#search-issues-and-pull-requests
# @public
function gitty::search::issues()
{
    local q="${1:-gitty}" selector="${2:-url}"
    limit="${3:-100}" callback="${4:-cat}"
    local url="/search/issues?q=$q"
    
    gitty::api::paginate "$url" "$selector" "$limit" "$callback"
}

# Find labels in a repository with names or descriptions that match search
# keywords.
#
# @cf   https://developer.github.com/v3/search/#search-labels
# @public
function gitty::search::labels()
{
    local q="${1:-gitty}" repo="${2:-40891491}" # bashlets
    local selector="${3:-url}"
    limit="${4:-100}" callback="${5:-cat}"
    local url="/search/labels?repository_id=$repo&q=$q"
    
    gitty::api::paginate "$url" "$selector" "$limit" "$callback"
}

# Find repositories via various criteria.
#
# @cf   https://developer.github.com/v3/search/#search-repositories
# @public
function gitty::search::repositories()
{
    local q="${1:-gitty}" selector="${2:-full_name}"
    limit="${3:-100}" callback="${4:-cat}"
    local url="/search/repositories?q=$q"
    
    gitty::api::paginate "$url" "$selector" "$limit" "$callback"
}

# Find topics via various criteria.
#
# @cf   https://developer.github.com/v3/search/#search-topics
# @public
function gitty::search::topics()
{
    local q="${1:-gitty}" selector="${2:-name}"
    limit="${3:-100}" callback="${4:-cat}"
    local url="/search/topics?q=$q"
    
    (
        # Note: The topics property for repositories on GitHub is currently
        # available for developers to preview. To view the topics property in
        # calls that return repository results, we must provide a custom media
        # type in the Accept header.

        GITTY_API_CUSTOM_HEADERS="$GITTY_API_CUSTOM_HEADERS -H 'Accept: application/vnd.github.mercy-preview+json'"
        gitty::api::paginate "$url" "$selector" "$limit" "$callback"
    )
}

# Find users via various criteria.
#
# @cf   https://developer.github.com/v3/search/#search-users
# @public
function gitty::search::users()
{
    local q="${1:-gitty}" selector="${2:-login}"
    limit="${3:-100}" callback="${4:-cat}"
    local url="/search/users?q=$q"
    
    gitty::api::paginate "$url" "$selector" "$limit" "$callback"
}


# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
