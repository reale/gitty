#!/bin/bash

################################################################################
#  ____ ____ ____ ____ ____ 
# ||G |||i |||t |||t |||y ||
# ||__|||__|||__|||__|||__||
# |/__\|/__\|/__\|/__\|/__\|
#                                        
# Gitty -- A GitHub client in Bash
#
# Copyright (c) 2014-20 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################

source ./gitty.sh


function method_description_md()
{
    local module="$1" method="$2"

    gitty::help::method_desc "$module" "$method"
}

function module_methods_md()
{
    local module="$1"
    local name="$(basename "$module")"

    gitty::help::methods "$module" \
        | xargs -n 1 -I % echo "* [\`${name}::%\`](#${name}%)"
}

function module_methods_description_md()
{
    local module="$1"
    local name="$(basename "$module")"

    for method in $(gitty::help::methods "$module")
    do
        cat <<EOF
### \`$name::$method\`

$(method_description_md "$module" "$method")

EOF
    done
}

function modules_md()
{
    local module

    for module in $(gitty::help::modules)
    do
        cat <<EOF
### \`$module\`

$(module_methods_md "$module")

EOF
    done
}

function modules_descriptions_md()
{
    local module

    for module in $(gitty::help::modules)
    do
        module_methods_description_md "$module"
    done
}

function toc_md()
{
    cat <<EOF
## API Reference

$(modules_md)

EOF
}

function descriptions_md()
{
    cat <<EOF
## Methods Description

$(modules_descriptions_md)

EOF
}

function generate_md()
{
    toc_md
    descriptions_md
}


generate_md

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
